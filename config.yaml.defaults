app:
  title: SkyPortal
  logos: # Logos to place in the top-left of the header/login page (zero or more)
    - src: /static/images/skyportal_logo_dark.png
      alt_text: Skyportal logo
  login_message: |
    For more information about the project, see
    <a href="https://github.com/skyportal/skyportal">
      https://github.com/skyportal/skyportal
    </a>

  secret_key: abc01234  # This secret key can be any random string of
                        # characters.
                        #
                        # You should re-generate this for your application
                        # using:
                        #
                        # base64.b64encode(os.urandom(50)).decode('ascii')
  factory: skyportal.app_server.make_app

  observation_plan:
    default_filters: ['ztfg', 'ztfr', 'ztfi']
    use_skyportal_fields: True

  heasarc_endpoint: https://heasarc.gsfc.nasa.gov

  # this endpoint does not actually do anything -- it is just for testing
  sedm_endpoint: http://minar.caltech.edu/add_fritz
  sedmv2_endpoint:
  trt_endpoint: https://trt.narit.or.th/hub/api

  lt_host: 161.72.57.3
  lt_port: 8080

  lco_protocol: https
  lco_host: observe.lco.global
  lco_port: 443

  lco_archive_endpoint: https://archive-api.lco.global

  ztf:
    protocol: https
    host: kowalski.caltech.edu
    port: 443

  ztf_forced_endpoint: https://ztfweb.ipac.caltech.edu

  fink_endpoint: https://fink-portal.org

  mpc_endpoint: https://minorplanetcenter.net

  swift:
    protocol: https
    host: www.swift.psu.edu
    port: 443

  swift_xrt_endpoint: https://www.swift.ac.uk/user_objects

  ps1_endpoint: https://catalogs.mast.stsci.edu/

  tess_endpoint: https://tess.mit.edu/public/tesstransients/

  atlas:
    protocol: https
    host: fallingstar-data.com
    port:

  kait:
    protocol: http
    host: herculesii.astro.berkeley.edu
    port:

  treasuremap_endpoint: https://treasuremap.space

  tns:
    endpoint: https://sandbox.wis-tns.org
    bot_id:
    bot_name:
    api_key:
    look_back_days: 1

  winter:
    protocol: http
    host: winter.caltech.edu
    port: 82
    submit_trigger: False # if False, the API POST call will only validate the payload

  gracedb_endpoint: https://gracedb.ligo.org/api/
  # See https://computing.docs.ligo.org/guide/auth/x509/ for example
  gracedb_credential:

  # See https://stackoverflow.com/a/35604855 for syntax
  # These are Javascript component routes
  routes:
    - path: "/"
      component: templates/HomePage
      exact: True
    - path: "/source/:id"
      component: source/Source
    - path: "/favorites"
      component: FavoritesPage
    - path: "/gcn_events/:dateobs"
      component: gcn/GcnEventPage
    - path: "/groups"
      component: group/Groups
    - path: "/group/:id"
      component: group/Group
    - path: "/profile"
      component: Profile
    - path: "/candidates"
      component: candidate/CandidateList
    - path: "/sources"
      component: source/SourceList
    - path: "/user/:id"
      component: user/UserInfo
    - path: "/upload_photometry/:id"
      component: UploadPhotometry
    - path: "/about"
      component: About
    - path: "/run/:id"
      component: RunSummary
    - path: "/source/:obj_id/analysis/:analysis_id"
      component: source/SourceAnalysisPage
    - path: "/share_data/:id"
      component: ShareDataForm
    - path: "/filter/:fid"
      component: Filter
    - path: "/runs"
      component: ObservingRunPage
    - path: "/allocations"
      component: allocation/AllocationPage
    - path: "/allocation/:id"
      component: allocation/AllocationSummary
    - path: "/instrument/:id"
      component: InstrumentSummary
    - path: "/telescope/:id"
      component: telescope/TelescopeSummary
    - path: "/observations"
      component: ObservationPage
    - path: "/galaxies"
      component: GalaxyPage
    - path: "/spatial_catalogs"
      component: SpatialCatalogPage
    - path: "/followup_requests"
      component: followup_request/FollowupRequestPage
    - path: "/group_sources/:id"
      component: group/GroupSources
    - path: "/user_management"
      component: user/UserManagement
    - path: "/upload_spectrum/:id"
      component: UploadSpectrum
    - path: "/observability/:id"
      component: Observability
    - path: "/source/:id/finder"
      component: FindingChart
    - path: "/source/:id/periodogram"
      component: Periodogram
    - path: "/db_stats"
      component: DBStats
    - path: "/gcn_events"
      component: gcn/GcnEvents
    - path: "/telescopes"
      component: telescope/TelescopePage
    - path: "/instruments"
      component: InstrumentPage
    - path: "/mmadetectors"
      component: mma_detector/MMADetectorPage
    - path: "/earthquakes"
      component: earthquake/EarthquakesPage
    - path: "/earthquakes/:event_id"
      component: earthquake/EarthquakePage
    - path: "/services"
      component: analysis/AnalysisServicePage
    - path: "/recurring_apis"
      component: RecurringAPIPage
    - path: "/shifts"
      component: ShiftNoId
    - path: "/shifts/:id"
      component: ShiftWithId
    - path: "/summary_search"
      component: SummarySearch
    - path: "/taxonomies"
      component: TaxonomyPage
    - path: "/tns_robots"
      component: tns/TNSRobotsPage
    - path: "/tns_robot/:id/submissions"
      component: tns/TNSRobotSubmissionsPage

  sidebar:
    # See https://material-ui.com/components/material-icons/
    - name: main
      subitems:
        - name: Dashboard
          icon: Home
          url: /

        - name: Sources
          icon: Storage
          url: /sources

        - name: Candidates
          icon: Search
          url: /candidates

        - name: Favorites
          icon: Star
          url: /favorites

        - name: Groups
          icon: GroupWork
          url: /groups

        - name: Observing Runs
          icon: LocalCafe
          url: /runs

        - name: GCN Events
          icon: SettingsInputAntenna
          url: /gcn_events

        - name: Followup Requests
          icon: WorkOutlined
          url: /followup_requests

        - name: Shifts
          icon: SubwayRounded
          url: /shifts

        - name: Summary Search
          icon: Troubleshoot
          url: /summary_search

        - name: About
          icon: Info
          url: /about

    - name: Other
      icon: MoreHoriz
      subitems:
        - name: Telescopes
          icon: MyLocation
          url: /telescopes

        - name: Instruments
          icon: Wifi
          url: /instruments

        - name: MMADetectors
          icon: Abc
          url: /mmadetectors

        - name: Allocations
          icon: HourglassEmptyOutlined
          url: /allocations

        - name: Observations
          icon: ZoomInOutlined
          url: /observations

        - name: TNS Robots
          icon: Assignment
          url: /tns_robots

        - name: Earthquakes
          icon: PieChart
          url: /earthquakes

        - name: Galaxies
          icon: TornadoOutlined
          url: /galaxies

        - name: Spatial Catalogs
          icon: PhotoSizeSelectLargeOutlined
          url: /spatial_catalogs

        - name: Analysis Services
          icon: SentimentSatisfied
          url: /services

        - name: Recurring API
          icon: Restore
          url: /recurring_apis

        - name: Taxonomies
          icon: WallpaperOutlined
          url: /taxonomies

    - name: Admin
      icon: AdminPanelSettings
      permissions: ["Manage users", "System admin"]
      subitems:
        - name: DB Stats
          icon: Assessment
          permissions: ["System admin"]
          url: /db_stats
        - name: User Management
          icon: Group
          permissions: ["Manage users", "System admin"]
          url: /user_management


  # See https://github.com/STRML/react-grid-layout for more on the grid package
  homepage_grid:
    # This section describes the grid on which Home Page widgets are laid out.
    #
    # The breakpoints describe screen sizes at which a different set of widget
    # layouts should be used. Note that these breakpoints describe minimum width
    # values, unlike the maximum width bounds used by Material UI breakpoints.
    # For example, a breakpoint of "sm: 650" will match windows with width 650px
    # or greater, until the next highest breakpoint is hit (probably a "md").
    # This is different from Material UI, where a breakpoint of 650 would match
    # window widths that are at most 650px.
    #
    # The cols describe the number of evenly spaced columns that make up the
    # grid at a given breakpoint. For example, on extra-large screens (greater
    # than ${breakpoints.xlg} pixels), the grid will use ${cols.xlg} columns of
    # equal width to describe sizes of widgets based on the layouts provided.
    #
    # Optionally, you may provide a "row_height: {a rem value}" property in
    # this section to change the height of a row on the grid. By default, this
    # value is 9.375rem (150px for the default 16px = 1rem configuration).

    breakpoints:
      xlg: 1400
      lg: 1150
      md: 996
      sm: 650
      xs: 0

    cols:
      xlg: 16
      lg: 12
      md: 10
      sm: 6
      xs: 4

  homepage_widgets:
    # This section describes the specific widgets shown on the Home Page and how
    # they are laid out by default on the grid of the page.
    #
    # The name of section should be the same as the widget's React component.
    #
    # The props property should be a set of properties to be passed on to the
    # underlying React component for the widget. You may run into cases in which
    # you must pass a more complex, dynamic property (perhaps fetched from the
    # application redux store). Since you can not know that in the time of the
    # configuration writing, such properties should be directly coded into the
    # HomePage.jsx.template file (see the GroupList widget for an example)
    #
    # By default, any widget listed here is shown on the Home Page. However, you
    # can give a widget the property "show: false" to turn off rendering of the
    # widget.
    #
    # The resizable property determines whether the user is able to resize the
    # widget after it has been rendered based on default layouts.
    #
    # Finally, the layouts property provides an array of default sizes/locations
    # for each screen width breakpoint for the given widget. Layout arrays are
    # given in the order [x, y, width, height], in units of grid columns/rows.
    # For example, a layout array of [1, 2, 3, 4] will render a widget 3 grid
    # columns in width, 4 grid rows in height, and have its upper-left corner at
    # the column 1 (zero-indexed) and row 2. Note that each row is by default
    # 150px in height. The row height can be altered in the homepage_grid
    # section above (as well as other grid characteristics).
    WeatherWidget:
      resizeable: true
      minW: 2
      layouts:
        xlg: [12, 3, 4, 2]
        lg: [9, 3, 3, 2]
        md: [6, 6, 4, 3]
        sm: [0, 9, 6, 1]
        xs: [0, 19, 5, 1]

    SourceCounts:
      props:
        sinceDaysAgo: 7
      resizeable: true
      minW: 1.5
      layouts:
        xlg: [14, 0, 2, 1]
        lg: [10, 0, 2, 1]
        md: [8, 0, 2, 1]
        sm: [4.5, 0, 1.5, 1]
        xs: [0, 0, 4, 1]

    RecentSources:
      resizeable: true
      minW: 2
      layouts:
        xlg: [0, 0, 5, 3]
        lg: [0, 0, 4, 3]
        md: [0, 0, 4, 3]
        sm: [0, 3, 3, 3]
        xs: [0, 4, 4, 3]

    NewsFeed:
      resizeable: true
      minW: 2
      layouts:
        xlg: [10, 0, 4, 3]
        lg: [7, 0, 3, 3]
        md: [4, 0, 4, 3]
        sm: [0, 0, 4.5, 3]
        xs: [0, 1, 4, 3]

    TopSources:
      resizeable: true
      minW: 2
      layouts:
        xlg: [5, 0, 5, 3]
        lg: [4, 0, 3, 3]
        md: [0, 3, 4, 3]
        sm: [3, 3, 3, 3]
        xs: [0, 7, 4, 3]

    TopSavers:
      resizeable: true
      minW: 3
      layouts:
        xlg: [7, 3, 5, 3]
        lg: [5, 3, 4, 2]
        md: [0, 6, 6, 3]
        sm: [0, 10, 6, 3]
        xs: [0, 14, 4, 3]

    RecentGcnEvents:
      resizeable: true
      minW: 3
      layouts:
        xlg: [0, 3, 7, 3]
        lg: [0, 3, 5, 2]
        md: [4, 3, 6, 3]
        sm: [0, 6, 6, 3]
        xs: [0, 10, 4, 4]

    GroupList:
      props:
        title: My Groups
      resizeable: true
      minW: 1.5
      layouts:
        xlg: [14, 1, 2, 2]
        lg: [10, 1, 2, 2]
        md: [8, 1, 2, 2]
        sm: [4.5, 1, 1.5, 2]
        xs: [0, 17, 4, 2]

database:
  database: skyportal
  host: localhost
  port: 5432
  user: skyportal
  password:

server:
  # From https://console.developers.google.com/
  #
  # - Create Client ID
  # - Javascript origins: https://localhost:5000
  # - Authorized redirect URLs: http://localhost:5000/complete/google-oauth2/
  #
  # You need to have Google+ API enabled; it takes a few minutes to activate.
  protocol: http
  host: localhost
  port: 5000  # This is the public-facing port

  # Whether the base URL is http or https
  ssl: False

  # According to the Tornado docs at
  # https://www.tornadoweb.org/en/stable/guide/running.html#processes-and-ports:
  #
  # Due to the Python GIL (Global Interpreter Lock), it is necessary
  # to run multiple Python processes to take full advantage of
  # multi-CPU machines. Typically it is best to run one process per
  # CPU.
  processes: 4

  # How many of the above processes should be dedicated to
  # frontend only (i.e., no token authorized API requests)
  dedicated_frontend_processes: 2

  # The max size of a request body in megabytes (M)
  max_body_size: 100

  # nginx parameter which sets both the time in seconds before which
  # the server is considered unavailable and the subsequent period of
  # time the server will be unavailable
  fail_timeout: 20

  # Rate limit: number of requests per second (see https://www.nginx.com/blog/rate-limiting-nginx/)
  rate_limit: 5
  # Rate limit burst size (https://www.nginx.com/blog/rate-limiting-nginx/#bursts)
  burst: 10

  # In addition to the local network, specify any IP addresses that are to be
  # exempt from API rate limiting
  whitelisted_ips: []

  # Specify IPs or address ranges (e.g., 130.211.0.0/22) that are associated
  # with upstream load balancing.
  # These trusted addresses are used to uncover the originating IP.
  loadbalancer_ips: []

  auth:
    debug_login: True
    google_oauth2_key:
    google_oauth2_secret:
    google_oauth2_timeout: 15

services:
  dask: False

misc:
  days_to_keep_unsaved_candidates: 7
  minutes_to_keep_candidate_query_cache: 60
  minutes_to_keep_annotations_info_query_cache: 360
  minutes_to_keep_localization_instrument_query_cache: 1440
  max_items_in_localization_instrument_query_cache: 100
  minutes_to_keep_public_source_pages_cache: 1440
  minutes_to_keep_reports_cache: 1440
  public_group_name: "Sitewide Group"
  # Use a named cosmology from `astropy.cosmology.parameters.available` cosmologies
  # or supply the arguments for an `astropy.cosmology.FLRW` cosmological instance.
  # If {"flat": True} then use a subclass of the FLRW, called `FlatLambdaCMD`
  # otherwise use `LambdaCDM`. See `utils.cosmology.py` for the way in which
  # the user-supplied cosmology parameter set constructs the site-wide cosmology.
  cosmology: Planck18
  #cosmology: {H0: "65.0", Om0: 0.3, Ode0: 0.7, name: 'skyportal_user_cosmo'}

  dustmap: sfd
  dustmap_folder: persistentdata/dustmap

  # The minimum signal-to-noise ratio/ n-sigma for lim mag cacluations to
  # consider a photometry point as a detection
  photometry_detection_threshold_nsigma: 3.0

  # whether or not the frontend show photometry validation information
  # and if the backend allows adding/editing/deleting it
  photometry_validation: True

  # The airmass value below which to track hours for when plotting
  # on an object's observability page
  hours_below_airmass_threshold: 2.9

  color_palette: turbo

weather:
  # time in seconds to wait before fetching weather for a given telescope
  refresh_time: 3600.0
  # Get an API key at OpenWeatherMap https://openweathermap.org/price
  # the free tier should be sufficent, as we cache the weather results
  # for each telescope
  openweather_api_key:

external_logging:
  papertrail:
    # get an account at https://papertrailapp.com
    enabled: False
    # change url to the correct subdomain for your account
    # and change the port as well
    url:
    port:
    # which log files, if any do you not want to send over to the 3rd party?
    excluded_log_files: ["log/websocket_server.log"]
  sentry:
    endpoint:
    # Set traces_sample_rate to 1.0 to capture 100%
    # of transactions for performance monitoring.
    # Sentry recommends adjusting this value in production.
    traces_sample_rate: 1.0
    # Set profiles_sample_rate to 1.0 to profile 100%
    # of sampled transactions.
    # We recommend adjusting this value in production.
    profiles_sample_rate: 1.0

cron:
  # - interval: 60
  #  script: jobs/count_unsaved_candidates.py
  # - interval: 1440
  #   script: jobs/delete_unsaved_candidates.py
  #   limit: ["01:00", "02:00"]

twilio:
  # Twilio Sendgrid API configs
  # This needs to be set to a valid, Sendgrid-registered address in config.yaml
  from_email:
  # This needs to be obtained via Sendgrid setup on their site
  sendgrid_api_key:

  # Twilio SMS API configs
  # These values must be valid ones from the Twitter API console
  from_number:
  sms_account_sid:
  sms_auth_token:

smtp:
  from_email:  # This is both the email used to authenticate with smtplib and the sender address
  password:
  host: smtp.gmail.com  # Default Gmail settings; modify as needed
  port: 587  # Default Gmail settings; modify as needed

# This value needs to be either "sendgrid" or "smtp" (without quotes)
email_service:

invitations:
  enabled: False  # If debug_login=True above, invite tokens won't be used during auth
  days_until_expiry: 3
  email_subject: "You've been invited to collaborate on SkyPortal"
  email_body_preamble: | # This can include HTML tags
    Welcome to <b>SkyPortal</b>!
    <br />
    Some other text here.

notifications:
  enabled: True

standard_stars:
  ZTF: data/ztf_standards.csv
  ESO: data/eso_standards.csv

# Parameters for the thumbnail classification function which labels
# images as grayscale or colored. See utils/thumbnail.py for the function.
image_grayscale_params:
  thumb_size: 40
  MSE_cutoff: 22
  adjust_color_bias: True

slack:
  microservice_port: 64100
  expected_url_preamble: "https://hooks.slack.com/"

spectrum_types:
  types:
   - source
   - host
   - host_center
  default: source

cross_match:
  gaia:
    catalog: "gaiaedr3.gaia_source"
    radius: 2.0
    limmag: 20.5
    number: 1


# define the additional passbands that are not in SNCosmo
# (https://sncosmo.readthedocs.io/en/stable/bandpass-list.html)
# the names must be unique. The wavelength array should
# describe the full extent of the bandpass in Angstrom
# and the transmission should be a vector of the same
# length that defines the full Quantum Efficiency at each wavelength.
# must have at least two elements in the arrays
# `wavelength` and `transmission`.
additional_bandpasses:
#  - name: 'atlasc'
#    filterset: 'atlas'
#    wavelength: [4150, 4157, 6556, 6560]
#    transmission: [0, 1, 1, 0]
#    description: "basic ATLAS C filter - tophat transmission"
#  - name: 'atlaso'
#    filterset: 'atlas'
#    wavelength: [5580, 5582, 8249, 8250]
#    transmission: [0, 1, 1, 0]
#    description: "basic ATLAS O filter - tophat transmission"
  - name: 'swiftxrt'
    filterset: 'xrt'
    wavelength: [0.1, 1, 62, 100]
    transmission: [0, 1, 1, 0]
    description: "basic XRT filter - tophat transmission"
  - name: 'nicerxti'
    filterset: 'xti'
    wavelength: [0.1, 1.2, 41, 100]
    transmission: [0, 1, 1, 0]
    description: "basic XTI filter - tophat transmission"

user:
  default_role: 'Full user'
  default_groups: []
  default_acls: []

ports:
  facility_queue: 64510
  notification_queue: 64610
  observation_plan_queue: 64710
  tns_retrieval_queue: 64810
  tns_submission_queue: 64812

gcn:
  server: gcn.nasa.gov
  # you can obtain a client_id and client_secret at https://gcn.nasa.gov/quickstart
  # you can set a group_id to remember the last GCN the app ingested from the stream
  client_group_id:
  client_id:
  client_secret:
  notice_types:
    - FERMI_GBM_FLT_POS
    - FERMI_GBM_GND_POS
    - FERMI_GBM_FIN_POS
    - FERMI_GBM_SUBTHRESH
    - SWIFT_BAT_GRB_POS_ACK
    - SWIFT_XRT_POSITION
    # - LVC_PRELIMINARY
    # - LVC_INITIAL
    # - LVC_UPDATE
    # - LVC_RETRACTION
    # - AMON_ICECUBE_COINC
    # - AMON_ICECUBE_HESE
    - ICECUBE_ASTROTRACK_GOLD
    - ICECUBE_ASTROTRACK_BRONZE
    - MAXI_UNKNOWN
  json_notice_types:
    - einstein_probe.wxt.alert
    - swift.bat.guano
    - icecube.lvk_nu_track_search
  reject_tags: # reject notices with these tags (optional)
    - MDC
  summary:
    acknowledgements:
      - The SkyPortal project acknowledges the generous support of The Gordon and Betty Moore Foundation.

health_monitor:
  seconds_between_checks: 30.5
  allowed_downtime_seconds: 120
  allowed_times_down: 3
  request_timeout_seconds: 30
  # How long do we give apps after restart to become healthy
  startup_grace_seconds: 30

analysis_services:
  analysis_folder: persistentdata/analysis
  max_analysis_per_obj_per_user: 50
  sn_analysis_service:
    port: 6801
  ngsf_analysis_service:
    port: 7001
  spectral_cube_analysis_service:
    port: 7002
  openai_analysis_service:
    port: 7003
    summary:
      # set this global API key if the project
      # will pay for the OpenAI costs. Otherwise
      # individual users need to set their own key
      # in the user preferences
      # Get a global key at:
      #   https://platform.openai.com/account/api-keys
      api_key:
      temperature: 0.3
      max_tokens: 350
      top_p: 1.0
      frequency_penalty: 0.0
      model: gpt-3.5-turbo
      presence_penalty: 1.0
      prompt: Using markdown (including URL links), in one succinct (less than 250 words) paragraph written in the 3rd person summarize the following comments about this astronomical source.  If classifications and/or the redshift are given, then note those in the summary. This will be read by expert astrophysicists, so no need to explain known concepts and definitions.
    embeddings_store:
      summary:
        location: pinecone
        api_key:
        index_name: openai-skyportal-summary
        index_size: 1536
        model: text-embedding-ada-002
        environment: gcp-starter
        pod_type: p1.x1



comments_folder: persistentdata/comments
localizations_folder: persistentdata/localizations
photometric_series_folder: persistentdata/phot_series
photometric_series_autodelete: True

colors:
  classifications:
    classification:
      # A few examples that show up in the demo data. You can modify the config on deploy to fill out the colors and types you want.
      {
        "variable": "#3a87ad",
        "Time-domain Source": "#ff0000",
      }
    origin:
      {
        "SCoPe": "#3a87ad",
      }
  gcnTags:
    {
      "BNS": "#468847",
      "NSBH": "#b94a48",
      "BBH": "#333333",
      "GRB": "#f89406",
      "AMON": "#3a87ad",
      "Significant": "#8B008B",
      "retracted": "#ffffff",
    }

  summary_sources:
  - score: 0.9
    fw: bold
    col: green
  - score: 0.8
    fw: bold
    col: black
  - score: 0.7
    fw: normal
    col: black
  - score: 0.0
    fw: normal
    col: grey
