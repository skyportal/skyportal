"""add objanalysis and webhook mixin

Revision ID: 5dc838e75a63
Revises: e83ca47380d0
Create Date: 2022-06-15 15:41:44.351732

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils


# revision identifiers, used by Alembic.
revision = '5dc838e75a63'
down_revision = 'e83ca47380d0'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'obj_analyses',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('invalid_after', sa.DateTime(), nullable=False),
        sa.Column('token', sa.String(), nullable=False),
        sa.Column('handled_by_url', sa.String(), nullable=False),
        sa.Column(
            'status',
            sa.Enum(
                'queued',
                'pending',
                'completed',
                'failure',
                'cancelled',
                'timed_out',
                name='webhookstatustypes',
            ),
            nullable=False,
        ),
        sa.Column('duration', sa.Float(), nullable=True),
        sa.Column('last_activity', sa.DateTime(), nullable=True),
        sa.Column('status_message', sa.String(), nullable=True),
        sa.Column('_unique_id', sa.String(), nullable=False),
        sa.Column('hash', sa.String(), nullable=True),
        sa.Column('show_parameters', sa.Boolean(), nullable=False),
        sa.Column('show_plots', sa.Boolean(), nullable=False),
        sa.Column('show_corner', sa.Boolean(), nullable=False),
        sa.Column(
            'analysis_parameters', sqlalchemy_utils.types.json.JSONType(), nullable=True
        ),
        sa.Column('author_id', sa.Integer(), nullable=False),
        sa.Column('analysis_service_id', sa.Integer(), nullable=False),
        sa.Column('obj_id', sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ['analysis_service_id'], ['analysis_services.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(['author_id'], ['users.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['obj_id'], ['objs.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('_unique_id'),
        sa.UniqueConstraint('hash'),
        sa.UniqueConstraint('token'),
    )
    op.create_index(
        op.f('ix_obj_analyses_analysis_service_id'),
        'obj_analyses',
        ['analysis_service_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_obj_analyses_author_id'), 'obj_analyses', ['author_id'], unique=False
    )
    op.create_index(
        op.f('ix_obj_analyses_created_at'), 'obj_analyses', ['created_at'], unique=False
    )
    op.create_index(
        op.f('ix_obj_analyses_obj_id'), 'obj_analyses', ['obj_id'], unique=False
    )
    op.create_table(
        'group_obj_analyses',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('group_id', sa.Integer(), nullable=False),
        sa.Column('obj_analyse_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(
            ['obj_analyse_id'], ['obj_analyses.id'], ondelete='CASCADE'
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        'group_obj_analyses_forward_ind',
        'group_obj_analyses',
        ['group_id', 'obj_analyse_id'],
        unique=True,
    )
    op.create_index(
        'group_obj_analyses_reverse_ind',
        'group_obj_analyses',
        ['obj_analyse_id', 'group_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_group_obj_analyses_created_at'),
        'group_obj_analyses',
        ['created_at'],
        unique=False,
    )
    op.add_column(
        'analysis_services',
        sa.Column(
            'optional_analysis_parameters',
            sqlalchemy_utils.types.json.JSONType(),
            nullable=True,
        ),
    )
    # ### end Alembic commands ###
    with op.get_context().autocommit_block():
        op.execute(
            "ALTER TYPE analysisinputtypes ADD VALUE IF NOT EXISTS 'classifications' AFTER 'comments'"
        )


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('analysis_services', 'optional_analysis_parameters')
    op.drop_index(
        op.f('ix_group_obj_analyses_created_at'), table_name='group_obj_analyses'
    )
    op.drop_index('group_obj_analyses_reverse_ind', table_name='group_obj_analyses')
    op.drop_index('group_obj_analyses_forward_ind', table_name='group_obj_analyses')
    op.drop_table('group_obj_analyses')
    op.drop_index(op.f('ix_obj_analyses_obj_id'), table_name='obj_analyses')
    op.drop_index(op.f('ix_obj_analyses_created_at'), table_name='obj_analyses')
    op.drop_index(op.f('ix_obj_analyses_author_id'), table_name='obj_analyses')
    op.drop_index(
        op.f('ix_obj_analyses_analysis_service_id'), table_name='obj_analyses'
    )
    op.drop_table('obj_analyses')
    # ### end Alembic commands ###
