"""Simsurvey split analysis and plot

Revision ID: 5b756b18ff2d
Revises: f44a21fe8375
Create Date: 2022-06-29 02:31:39.679897

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '5b756b18ff2d'
down_revision = 'f44a21fe8375'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'survey_efficiency_for_observations',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('payload', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column('status', sa.String(), nullable=False),
        sa.Column(
            'lightcurves', postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column('gcnevent_id', sa.Integer(), nullable=False),
        sa.Column('localization_id', sa.Integer(), nullable=False),
        sa.Column('requester_id', sa.Integer(), nullable=False),
        sa.Column('instrument_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['gcnevent_id'], ['gcnevents.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(
            ['localization_id'], ['localizations.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(['requester_id'], ['users.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(
            ['instrument_id'], ['instruments.id'], ondelete='CASCADE'
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_survey_efficiency_for_observations_created_at'),
        'survey_efficiency_for_observations',
        ['created_at'],
        unique=False,
    )
    op.create_index(
        op.f('ix_survey_efficiency_for_observations_gcnevent_id'),
        'survey_efficiency_for_observations',
        ['gcnevent_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_survey_efficiency_for_observations_localization_id'),
        'survey_efficiency_for_observations',
        ['localization_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_survey_efficiency_for_observations_requester_id'),
        'survey_efficiency_for_observations',
        ['requester_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_survey_efficiency_for_observations_status'),
        'survey_efficiency_for_observations',
        ['status'],
        unique=False,
    )
    op.create_table(
        'group_survey_efficiency_for_observations',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('group_id', sa.Integer(), nullable=False),
        sa.Column('survey_efficiency_for_observation_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(
            ['survey_efficiency_for_observation_id'],
            ['survey_efficiency_for_observations.id'],
            ondelete='CASCADE',
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        'group_survey_efficiency_for_observations_forward_ind',
        'group_survey_efficiency_for_observations',
        ['group_id', 'survey_efficiency_for_observation_id'],
        unique=True,
    )
    op.create_index(
        'group_survey_efficiency_for_observations_reverse_ind',
        'group_survey_efficiency_for_observations',
        ['survey_efficiency_for_observation_id', 'group_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_group_survey_efficiency_for_observations_created_at'),
        'group_survey_efficiency_for_observations',
        ['created_at'],
        unique=False,
    )
    op.create_table(
        'survey_efficiency_for_observation_plans',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('payload', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column('status', sa.String(), nullable=False),
        sa.Column(
            'lightcurves', postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column('observation_plan_id', sa.Integer(), nullable=False),
        sa.Column('requester_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['observation_plan_id'], ['eventobservationplans.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(['requester_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_survey_efficiency_for_observation_plans_created_at'),
        'survey_efficiency_for_observation_plans',
        ['created_at'],
        unique=False,
    )
    op.create_index(
        op.f('ix_survey_efficiency_for_observation_plans_requester_id'),
        'survey_efficiency_for_observation_plans',
        ['requester_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_survey_efficiency_for_observation_plans_status'),
        'survey_efficiency_for_observation_plans',
        ['status'],
        unique=False,
    )
    op.create_table(
        'group_survey_efficiency_for_observation_plan',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('group_id', sa.Integer(), nullable=False),
        sa.Column(
            'survey_efficiency_for_observation_plan_id', sa.Integer(), nullable=False
        ),
        sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(
            ['survey_efficiency_for_observation_plan_id'],
            ['survey_efficiency_for_observation_plans.id'],
            ondelete='CASCADE',
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        'group_survey_efficiency_for_observation_plan_forward_ind',
        'group_survey_efficiency_for_observation_plan',
        ['group_id', 'survey_efficiency_for_observation_plan_id'],
        unique=True,
    )
    op.create_index(
        'group_survey_efficiency_for_observation_plan_reverse_ind',
        'group_survey_efficiency_for_observation_plan',
        ['survey_efficiency_for_observation_plan_id', 'group_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_group_survey_efficiency_for_observation_plan_created_at'),
        'group_survey_efficiency_for_observation_plan',
        ['created_at'],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f('ix_group_survey_efficiency_for_observation_plan_created_at'),
        table_name='group_survey_efficiency_for_observation_plan',
    )
    op.drop_index(
        'group_survey_efficiency_for_observation_plan_reverse_ind',
        table_name='group_survey_efficiency_for_observation_plan',
    )
    op.drop_index(
        'group_survey_efficiency_for_observation_plan_forward_ind',
        table_name='group_survey_efficiency_for_observation_plan',
    )
    op.drop_table('group_survey_efficiency_for_observation_plan')
    op.drop_index(
        op.f('ix_survey_efficiency_for_observation_plans_status'),
        table_name='survey_efficiency_for_observation_plans',
    )
    op.drop_index(
        op.f('ix_survey_efficiency_for_observation_plans_requester_id'),
        table_name='survey_efficiency_for_observation_plans',
    )
    op.drop_index(
        op.f('ix_survey_efficiency_for_observation_plans_created_at'),
        table_name='survey_efficiency_for_observation_plans',
    )
    op.drop_table('survey_efficiency_for_observation_plans')
    op.drop_index(
        op.f('ix_group_survey_efficiency_for_observations_created_at'),
        table_name='group_survey_efficiency_for_observations',
    )
    op.drop_index(
        'group_survey_efficiency_for_observations_reverse_ind',
        table_name='group_survey_efficiency_for_observations',
    )
    op.drop_index(
        'group_survey_efficiency_for_observations_forward_ind',
        table_name='group_survey_efficiency_for_observations',
    )
    op.drop_table('group_survey_efficiency_for_observations')
    op.drop_index(
        op.f('ix_survey_efficiency_for_observations_status'),
        table_name='survey_efficiency_for_observations',
    )
    op.drop_index(
        op.f('ix_survey_efficiency_for_observations_requester_id'),
        table_name='survey_efficiency_for_observations',
    )
    op.drop_index(
        op.f('ix_survey_efficiency_for_observations_localization_id'),
        table_name='survey_efficiency_for_observations',
    )
    op.drop_index(
        op.f('ix_survey_efficiency_for_observations_gcnevent_id'),
        table_name='survey_efficiency_for_observations',
    )
    op.drop_index(
        op.f('ix_survey_efficiency_for_observations_created_at'),
        table_name='survey_efficiency_for_observations',
    )
    op.drop_table('survey_efficiency_for_observations')
    # ### end Alembic commands ###
