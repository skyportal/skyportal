"""EQ migration

Revision ID: 99de544181a3
Revises: 4822ff118a4f
Create Date: 2022-09-06 21:59:52.656837

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils


# revision identifiers, used by Alembic.
revision = '99de544181a3'
down_revision = '4822ff118a4f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'earthquakeevents',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('sent_by_id', sa.Integer(), nullable=False),
        sa.Column('event_id', sa.String(), nullable=False, comment='Earthquake ID'),
        sa.Column(
            'event_uri',
            sqlalchemy_utils.types.url.URLType(),
            nullable=True,
            comment='Earthquake URI',
        ),
        sa.Column('status', sa.String(), nullable=False),
        sa.ForeignKeyConstraint(['sent_by_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('event_id'),
    )
    op.create_index(
        op.f('ix_earthquakeevents_created_at'),
        'earthquakeevents',
        ['created_at'],
        unique=False,
    )
    op.create_index(
        op.f('ix_earthquakeevents_sent_by_id'),
        'earthquakeevents',
        ['sent_by_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_earthquakeevents_status'), 'earthquakeevents', ['status'], unique=False
    )
    op.create_table(
        'comments_on_earthquakes',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('text', sa.String(), nullable=False),
        sa.Column('attachment_name', sa.String(), nullable=True),
        sa.Column('origin', sa.String(), nullable=True),
        sa.Column('bot', sa.Boolean(), server_default='false', nullable=False),
        sa.Column('earthquake_id', sa.Integer(), nullable=False),
        sa.Column('attachment_bytes', sa.LargeBinary(), nullable=True),
        sa.Column('author_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['author_id'], ['users.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(
            ['earthquake_id'], ['earthquakeevents.id'], ondelete='CASCADE'
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_comments_on_earthquakes_author_id'),
        'comments_on_earthquakes',
        ['author_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_comments_on_earthquakes_created_at'),
        'comments_on_earthquakes',
        ['created_at'],
        unique=False,
    )
    op.create_index(
        op.f('ix_comments_on_earthquakes_earthquake_id'),
        'comments_on_earthquakes',
        ['earthquake_id'],
        unique=False,
    )
    op.create_table(
        'earthquakemeasureds',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('event_id', sa.Integer(), nullable=False, comment='Earthquake ID'),
        sa.Column(
            'detector_id',
            sa.Integer(),
            nullable=False,
            comment='Multimessenger Astronomical Detector id',
        ),
        sa.Column(
            'rfamp',
            sa.Float(),
            nullable=False,
            comment='Earthquake amplitude measured [m/s]',
        ),
        sa.Column(
            'lockloss',
            sa.INTEGER(),
            nullable=False,
            comment='Earthquake lockloss measured, should be 0 (no lockloss) or 1 (lockloss)',
        ),
        sa.ForeignKeyConstraint(
            ['detector_id'], ['mmadetectors.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(
            ['event_id'], ['earthquakeevents.id'], ondelete='CASCADE'
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_earthquakemeasureds_created_at'),
        'earthquakemeasureds',
        ['created_at'],
        unique=False,
    )
    op.create_table(
        'earthquakenotices',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('sent_by_id', sa.Integer(), nullable=False),
        sa.Column('content', sa.LargeBinary(), nullable=True),
        sa.Column('event_id', sa.String(), nullable=False, comment='Earthquake ID'),
        sa.Column('lat', sa.Float(), nullable=False, comment='Latitude'),
        sa.Column('lon', sa.Float(), nullable=False, comment='Longitude'),
        sa.Column(
            'depth',
            sa.Float(),
            nullable=False,
            comment='Depth relative to sea level (positive values as depth increases) [m]',
        ),
        sa.Column(
            'magnitude',
            sa.Float(),
            nullable=False,
            comment='Earthquake (Moment) Magnitude',
        ),
        sa.Column('date', sa.DateTime(), nullable=False, comment='UTC event timestamp'),
        sa.ForeignKeyConstraint(
            ['event_id'], ['earthquakeevents.event_id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(['sent_by_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_earthquakenotices_created_at'),
        'earthquakenotices',
        ['created_at'],
        unique=False,
    )
    op.create_index(
        op.f('ix_earthquakenotices_date'), 'earthquakenotices', ['date'], unique=False
    )
    op.create_index(
        op.f('ix_earthquakenotices_magnitude'),
        'earthquakenotices',
        ['magnitude'],
        unique=False,
    )
    op.create_index(
        op.f('ix_earthquakenotices_sent_by_id'),
        'earthquakenotices',
        ['sent_by_id'],
        unique=False,
    )
    op.create_table(
        'earthquakepredictions',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('event_id', sa.Integer(), nullable=False, comment='Earthquake ID'),
        sa.Column(
            'detector_id',
            sa.Integer(),
            nullable=False,
            comment='Multimessenger Astronomical Detector id',
        ),
        sa.Column('d', sa.Float(), nullable=False, comment='Distance [km]'),
        sa.Column('p', sa.DateTime(), nullable=False, comment='P-wave time'),
        sa.Column('s', sa.DateTime(), nullable=False, comment='S-wave time'),
        sa.Column(
            'r2p0', sa.DateTime(), nullable=False, comment='R-2.0 km/s-wave time'
        ),
        sa.Column(
            'r3p5', sa.DateTime(), nullable=False, comment='R-3.5 km/s-wave time'
        ),
        sa.Column(
            'r5p0', sa.DateTime(), nullable=False, comment='R-5.0 km/s-wave time'
        ),
        sa.Column(
            'rfamp',
            sa.Float(),
            nullable=False,
            comment='Earthquake amplitude predictions [m/s]',
        ),
        sa.Column(
            'lockloss',
            sa.Float(),
            nullable=False,
            comment='Earthquake lockloss prediction, between 0 (no lockloss) and 1 (lockloss)',
        ),
        sa.ForeignKeyConstraint(
            ['detector_id'], ['mmadetectors.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(
            ['event_id'], ['earthquakeevents.id'], ondelete='CASCADE'
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_earthquakepredictions_created_at'),
        'earthquakepredictions',
        ['created_at'],
        unique=False,
    )
    op.create_table(
        'reminders_on_earthquakes',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('text', sa.String(), nullable=False),
        sa.Column('origin', sa.String(), nullable=True),
        sa.Column('bot', sa.Boolean(), server_default='false', nullable=False),
        sa.Column('next_reminder', sa.DateTime(), nullable=False),
        sa.Column('reminder_delay', sa.Float(), nullable=False),
        sa.Column('number_of_reminders', sa.Integer(), nullable=False),
        sa.Column('earthquake_id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['earthquake_id'], ['earthquakeevents.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_reminders_on_earthquakes_created_at'),
        'reminders_on_earthquakes',
        ['created_at'],
        unique=False,
    )
    op.create_index(
        op.f('ix_reminders_on_earthquakes_earthquake_id'),
        'reminders_on_earthquakes',
        ['earthquake_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_reminders_on_earthquakes_next_reminder'),
        'reminders_on_earthquakes',
        ['next_reminder'],
        unique=False,
    )
    op.create_index(
        op.f('ix_reminders_on_earthquakes_number_of_reminders'),
        'reminders_on_earthquakes',
        ['number_of_reminders'],
        unique=False,
    )
    op.create_index(
        op.f('ix_reminders_on_earthquakes_user_id'),
        'reminders_on_earthquakes',
        ['user_id'],
        unique=False,
    )
    op.create_table(
        'group_comments_on_earthquakes',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('group_id', sa.Integer(), nullable=False),
        sa.Column('comments_on_earthquake_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['comments_on_earthquake_id'],
            ['comments_on_earthquakes.id'],
            ondelete='CASCADE',
        ),
        sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        'group_comments_on_earthquakes_forward_ind',
        'group_comments_on_earthquakes',
        ['group_id', 'comments_on_earthquake_id'],
        unique=True,
    )
    op.create_index(
        'group_comments_on_earthquakes_reverse_ind',
        'group_comments_on_earthquakes',
        ['comments_on_earthquake_id', 'group_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_group_comments_on_earthquakes_created_at'),
        'group_comments_on_earthquakes',
        ['created_at'],
        unique=False,
    )
    op.create_table(
        'group_reminders_on_earthquakes',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('group_id', sa.Integer(), nullable=False),
        sa.Column('reminders_on_earthquake_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(
            ['reminders_on_earthquake_id'],
            ['reminders_on_earthquakes.id'],
            ondelete='CASCADE',
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        'group_reminders_on_earthquakes_forward_ind',
        'group_reminders_on_earthquakes',
        ['group_id', 'reminders_on_earthquake_id'],
        unique=True,
    )
    op.create_index(
        'group_reminders_on_earthquakes_reverse_ind',
        'group_reminders_on_earthquakes',
        ['reminders_on_earthquake_id', 'group_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_group_reminders_on_earthquakes_created_at'),
        'group_reminders_on_earthquakes',
        ['created_at'],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f('ix_group_reminders_on_earthquakes_created_at'),
        table_name='group_reminders_on_earthquakes',
    )
    op.drop_index(
        'group_reminders_on_earthquakes_reverse_ind',
        table_name='group_reminders_on_earthquakes',
    )
    op.drop_index(
        'group_reminders_on_earthquakes_forward_ind',
        table_name='group_reminders_on_earthquakes',
    )
    op.drop_table('group_reminders_on_earthquakes')
    op.drop_index(
        op.f('ix_group_comments_on_earthquakes_created_at'),
        table_name='group_comments_on_earthquakes',
    )
    op.drop_index(
        'group_comments_on_earthquakes_reverse_ind',
        table_name='group_comments_on_earthquakes',
    )
    op.drop_index(
        'group_comments_on_earthquakes_forward_ind',
        table_name='group_comments_on_earthquakes',
    )
    op.drop_table('group_comments_on_earthquakes')
    op.drop_index(
        op.f('ix_reminders_on_earthquakes_user_id'),
        table_name='reminders_on_earthquakes',
    )
    op.drop_index(
        op.f('ix_reminders_on_earthquakes_number_of_reminders'),
        table_name='reminders_on_earthquakes',
    )
    op.drop_index(
        op.f('ix_reminders_on_earthquakes_next_reminder'),
        table_name='reminders_on_earthquakes',
    )
    op.drop_index(
        op.f('ix_reminders_on_earthquakes_earthquake_id'),
        table_name='reminders_on_earthquakes',
    )
    op.drop_index(
        op.f('ix_reminders_on_earthquakes_created_at'),
        table_name='reminders_on_earthquakes',
    )
    op.drop_table('reminders_on_earthquakes')
    op.drop_index(
        op.f('ix_earthquakepredictions_created_at'), table_name='earthquakepredictions'
    )
    op.drop_table('earthquakepredictions')
    op.drop_index(
        op.f('ix_earthquakenotices_sent_by_id'), table_name='earthquakenotices'
    )
    op.drop_index(
        op.f('ix_earthquakenotices_magnitude'), table_name='earthquakenotices'
    )
    op.drop_index(op.f('ix_earthquakenotices_date'), table_name='earthquakenotices')
    op.drop_index(
        op.f('ix_earthquakenotices_created_at'), table_name='earthquakenotices'
    )
    op.drop_table('earthquakenotices')
    op.drop_index(
        op.f('ix_earthquakemeasureds_created_at'), table_name='earthquakemeasureds'
    )
    op.drop_table('earthquakemeasureds')
    op.drop_index(
        op.f('ix_comments_on_earthquakes_earthquake_id'),
        table_name='comments_on_earthquakes',
    )
    op.drop_index(
        op.f('ix_comments_on_earthquakes_created_at'),
        table_name='comments_on_earthquakes',
    )
    op.drop_index(
        op.f('ix_comments_on_earthquakes_author_id'),
        table_name='comments_on_earthquakes',
    )
    op.drop_table('comments_on_earthquakes')
    op.drop_index(op.f('ix_earthquakeevents_status'), table_name='earthquakeevents')
    op.drop_index(op.f('ix_earthquakeevents_sent_by_id'), table_name='earthquakeevents')
    op.drop_index(op.f('ix_earthquakeevents_created_at'), table_name='earthquakeevents')
    op.drop_table('earthquakeevents')
    # ### end Alembic commands ###
