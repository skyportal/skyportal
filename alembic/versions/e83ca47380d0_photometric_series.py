"""photometric series

Revision ID: e83ca47380d0
Revises: 5df4b399aae2
Create Date: 2022-03-24 21:45:06.722023

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e83ca47380d0'
down_revision = 'a75237f48f29'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'photometric_series',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('ra', sa.Float(), nullable=True),
        sa.Column('dec', sa.Float(), nullable=True),
        sa.Column('filename', sa.String(), nullable=False),
        sa.Column('mjd_first', sa.Float(), nullable=False),
        sa.Column('mjd_mid', sa.Float(), nullable=False),
        sa.Column('mjd_last', sa.Float(), nullable=False),
        sa.Column('mjd_last_detected', sa.Float(), nullable=False),
        sa.Column('is_detected', sa.Boolean(), nullable=False),
        sa.Column('series_identifier', sa.String(), nullable=False),
        sa.Column('series_obj_id', sa.String(), nullable=False),
        sa.Column('channel_id', sa.String(), nullable=False),
        sa.Column(
            'filter',
            postgresql.ENUM(name='bandpasses', create_type=False),
            nullable=False,
        ),
        sa.Column('exp_time', sa.Float(), nullable=False),
        sa.Column('frame_rate', sa.Float(), nullable=False),
        sa.Column('num_exp', sa.Integer(), nullable=False),
        sa.Column(
            'time_stamp_alignment',
            sa.Enum('start', 'middle', 'end', name='time_stamp_alignments'),
            nullable=False,
        ),
        sa.Column('ra_unc', sa.Float(), nullable=True),
        sa.Column('dec_unc', sa.Float(), nullable=True),
        sa.Column('magref', sa.Float(), nullable=True),
        sa.Column('magref_unc', sa.Float(), nullable=True),
        sa.Column('altdata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('upload_id', sa.String(), nullable=False),
        sa.Column('origin', sa.String(), server_default='', nullable=False),
        sa.Column('obj_id', sa.String(), nullable=False),
        sa.Column('instrument_id', sa.Integer(), nullable=False),
        sa.Column('followup_request_id', sa.Integer(), nullable=True),
        sa.Column('assignment_id', sa.Integer(), nullable=True),
        sa.Column('owner_id', sa.Integer(), nullable=False),
        sa.Column('mean_mag', sa.Float(), nullable=True),
        sa.Column('rms_mag', sa.Float(), nullable=True),
        sa.Column('robust_mag', sa.Float(), nullable=True),
        sa.Column('robust_rms', sa.Float(), nullable=True),
        sa.Column('medians', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('maxima', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('minima', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('stds', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('hash', sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ['assignment_id'],
            ['classicalassignments.id'],
        ),
        sa.ForeignKeyConstraint(
            ['followup_request_id'],
            ['followuprequests.id'],
        ),
        sa.ForeignKeyConstraint(
            ['instrument_id'], ['instruments.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(['obj_id'], ['objs.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('hash'),
    )
    op.create_index(
        op.f('ix_photometric_series_assignment_id'),
        'photometric_series',
        ['assignment_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_photometric_series_created_at'),
        'photometric_series',
        ['created_at'],
        unique=False,
    )
    op.create_index(
        op.f('ix_photometric_series_magref'),
        'photometric_series',
        ['magref'],
        unique=False,
    )
    op.create_index(
        op.f('ix_photometric_series_filename'),
        'photometric_series',
        ['filename'],
        unique=False,
    )
    op.create_index(
        op.f('ix_photometric_series_followup_request_id'),
        'photometric_series',
        ['followup_request_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_photometric_series_instrument_id'),
        'photometric_series',
        ['instrument_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_photometric_series_is_detected'),
        'photometric_series',
        ['is_detected'],
        unique=False,
    )
    op.create_index(
        op.f('ix_photometric_series_mjd_first'),
        'photometric_series',
        ['mjd_first'],
        unique=False,
    )
    op.create_index(
        op.f('ix_photometric_series_mjd_last'),
        'photometric_series',
        ['mjd_last'],
        unique=False,
    )
    op.create_index(
        op.f('ix_photometric_series_mjd_last_detected'),
        'photometric_series',
        ['mjd_last_detected'],
        unique=False,
    )
    op.create_index(
        op.f('ix_photometric_series_mjd_mid'),
        'photometric_series',
        ['mjd_mid'],
        unique=False,
    )
    op.create_index(
        op.f('ix_photometric_series_obj_id'),
        'photometric_series',
        ['obj_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_photometric_series_origin'),
        'photometric_series',
        ['origin'],
        unique=False,
    )
    op.create_index(
        op.f('ix_photometric_series_owner_id'),
        'photometric_series',
        ['owner_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_photometric_series_series_identifier'),
        'photometric_series',
        ['series_identifier'],
        unique=False,
    )
    op.create_table(
        'group_photometric_series',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('group_id', sa.Integer(), nullable=False),
        sa.Column('photometric_serie_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(
            ['photometric_serie_id'], ['photometric_series.id'], ondelete='CASCADE'
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        'group_photometric_series_forward_ind',
        'group_photometric_series',
        ['group_id', 'photometric_serie_id'],
        unique=True,
    )
    op.create_index(
        'group_photometric_series_reverse_ind',
        'group_photometric_series',
        ['photometric_serie_id', 'group_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_group_photometric_series_created_at'),
        'group_photometric_series',
        ['created_at'],
        unique=False,
    )
    op.create_table(
        'stream_photometric_series',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('stream_id', sa.Integer(), nullable=False),
        sa.Column('photometric_serie_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['photometric_serie_id'], ['photometric_series.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(['stream_id'], ['streams.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_stream_photometric_series_created_at'),
        'stream_photometric_series',
        ['created_at'],
        unique=False,
    )
    op.create_index(
        'stream_photometric_series_forward_ind',
        'stream_photometric_series',
        ['stream_id', 'photometric_serie_id'],
        unique=True,
    )
    op.create_index(
        'stream_photometric_series_reverse_ind',
        'stream_photometric_series',
        ['photometric_serie_id', 'stream_id'],
        unique=False,
    )
    # ### end Alembic commands ###
    op.execute(
        """CREATE INDEX ix_photometric_series_point ON public.photometric_series
                USING btree (((cosd(ra) * cosd("dec"))), ((sind(ra) * cosd("dec"))), sind("dec"));"""
    )


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        'stream_photometric_series_reverse_ind', table_name='stream_photometric_series'
    )
    op.drop_index(
        'stream_photometric_series_forward_ind', table_name='stream_photometric_series'
    )
    op.drop_index(
        op.f('ix_stream_photometric_series_created_at'),
        table_name='stream_photometric_series',
    )
    op.drop_table('stream_photometric_series')
    op.drop_index(
        op.f('ix_group_photometric_series_created_at'),
        table_name='group_photometric_series',
    )
    op.drop_index(
        'group_photometric_series_reverse_ind', table_name='group_photometric_series'
    )
    op.drop_index(
        'group_photometric_series_forward_ind', table_name='group_photometric_series'
    )
    op.drop_table('group_photometric_series')
    op.drop_index(
        op.f('ix_photometric_series_series_identifier'), table_name='photometric_series'
    )
    op.drop_index(
        op.f('ix_photometric_series_owner_id'), table_name='photometric_series'
    )
    op.drop_index(op.f('ix_photometric_series_origin'), table_name='photometric_series')
    op.drop_index(op.f('ix_photometric_series_obj_id'), table_name='photometric_series')
    op.drop_index(
        op.f('ix_photometric_series_mjd_mid'), table_name='photometric_series'
    )
    op.drop_index(
        op.f('ix_photometric_series_mjd_last_detected'), table_name='photometric_series'
    )
    op.drop_index(
        op.f('ix_photometric_series_mjd_last'), table_name='photometric_series'
    )
    op.drop_index(
        op.f('ix_photometric_series_mjd_first'), table_name='photometric_series'
    )
    op.drop_index(
        op.f('ix_photometric_series_is_detected'), table_name='photometric_series'
    )
    op.drop_index(
        op.f('ix_photometric_series_instrument_id'), table_name='photometric_series'
    )
    op.drop_index(
        op.f('ix_photometric_series_followup_request_id'),
        table_name='photometric_series',
    )
    op.drop_index(
        op.f('ix_photometric_series_filename'), table_name='photometric_series'
    )
    op.drop_index(op.f('ix_photometric_series_magref'), table_name='photometric_series')
    op.drop_index(
        op.f('ix_photometric_series_created_at'), table_name='photometric_series'
    )
    op.drop_index(
        op.f('ix_photometric_series_assignment_id'), table_name='photometric_series'
    )
    op.drop_table('photometric_series')
    # ### end Alembic commands ###
