"""plan migration

Revision ID: 46a40b35cdbb
Revises: 5ab82f23e15c
Create Date: 2022-02-10 21:47:07.254934

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '46a40b35cdbb'
down_revision = '5ab82f23e15c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'observationplanrequests',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('requester_id', sa.Integer(), nullable=True),
        sa.Column('last_modified_by_id', sa.Integer(), nullable=True),
        sa.Column('gcnevent_id', sa.Integer(), nullable=False),
        sa.Column('localization_id', sa.Integer(), nullable=False),
        sa.Column('payload', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column('status', sa.String(), nullable=False),
        sa.Column('allocation_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['allocation_id'], ['allocations.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(['gcnevent_id'], ['gcnevents.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(
            ['last_modified_by_id'], ['users.id'], ondelete='SET NULL'
        ),
        sa.ForeignKeyConstraint(
            ['localization_id'], ['localizations.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(['requester_id'], ['users.id'], ondelete='SET NULL'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_observationplanrequests_allocation_id'),
        'observationplanrequests',
        ['allocation_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_observationplanrequests_created_at'),
        'observationplanrequests',
        ['created_at'],
        unique=False,
    )
    op.create_index(
        op.f('ix_observationplanrequests_gcnevent_id'),
        'observationplanrequests',
        ['gcnevent_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_observationplanrequests_localization_id'),
        'observationplanrequests',
        ['localization_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_observationplanrequests_requester_id'),
        'observationplanrequests',
        ['requester_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_observationplanrequests_status'),
        'observationplanrequests',
        ['status'],
        unique=False,
    )
    op.create_table(
        'eventobservationplans',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('observation_plan_request_id', sa.Integer(), nullable=False),
        sa.Column('instrument_id', sa.Integer(), nullable=False),
        sa.Column('dateobs', sa.DateTime(), nullable=False),
        sa.Column('plan_name', sa.String(), nullable=True),
        sa.Column('validity_window_start', sa.DateTime(), nullable=False),
        sa.Column('validity_window_end', sa.DateTime(), nullable=False),
        sa.Column('status', sa.String(), nullable=False),
        sa.ForeignKeyConstraint(['dateobs'], ['gcnevents.dateobs'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(
            ['instrument_id'], ['instruments.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(
            ['observation_plan_request_id'],
            ['observationplanrequests.id'],
            ondelete='CASCADE',
        ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('plan_name'),
    )
    op.create_index(
        op.f('ix_eventobservationplans_created_at'),
        'eventobservationplans',
        ['created_at'],
        unique=False,
    )
    op.create_index(
        op.f('ix_eventobservationplans_dateobs'),
        'eventobservationplans',
        ['dateobs'],
        unique=False,
    )
    op.create_index(
        op.f('ix_eventobservationplans_status'),
        'eventobservationplans',
        ['status'],
        unique=False,
    )
    op.create_table(
        'observationplan_groups',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('observationplanrequest_id', sa.Integer(), nullable=False),
        sa.Column('group_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(
            ['observationplanrequest_id'],
            ['observationplanrequests.id'],
            ondelete='CASCADE',
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_observationplan_groups_created_at'),
        'observationplan_groups',
        ['created_at'],
        unique=False,
    )
    op.create_index(
        'observationplan_groups_forward_ind',
        'observationplan_groups',
        ['observationplanrequest_id', 'group_id'],
        unique=True,
    )
    op.create_index(
        'observationplan_groups_reverse_ind',
        'observationplan_groups',
        ['group_id', 'observationplanrequest_id'],
        unique=False,
    )
    op.create_table(
        'plannedobservations',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('observation_plan_id', sa.Integer(), nullable=False),
        sa.Column('instrument_id', sa.Integer(), nullable=False),
        sa.Column('dateobs', sa.DateTime(), nullable=False),
        sa.Column('field_id', sa.Integer(), nullable=False),
        sa.Column('exposure_time', sa.Integer(), nullable=False),
        sa.Column('weight', sa.Float(), nullable=False),
        sa.Column('filt', sa.String(), nullable=False),
        sa.Column('obstime', sa.DateTime(), nullable=False),
        sa.Column('overhead_per_exposure', sa.Integer(), nullable=False),
        sa.Column('planned_observation_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['dateobs'], ['gcnevents.dateobs'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(
            ['field_id'], ['instrumentfields.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(
            ['instrument_id'], ['instruments.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(
            ['observation_plan_id'], ['eventobservationplans.id'], ondelete='CASCADE'
        ),
        sa.PrimaryKeyConstraint('id', 'field_id'),
    )
    op.create_index(
        op.f('ix_plannedobservations_created_at'),
        'plannedobservations',
        ['created_at'],
        unique=False,
    )
    op.create_index(
        op.f('ix_plannedobservations_dateobs'),
        'plannedobservations',
        ['dateobs'],
        unique=False,
    )
    op.add_column(
        'instruments',
        sa.Column(
            'api_classname_obsplan',
            sa.Enum(
                'KAITAPI',
                'SEDMAPI',
                'SEDMV2API',
                'IOOAPI',
                'IOIAPI',
                'SPRATAPI',
                'SINISTROAPI',
                'SPECTRALAPI',
                'FLOYDSAPI',
                'MUSCATAPI',
                'SLACKAPI',
                'ZTFAPI',
                name='followup_apis',
            ),
            nullable=True,
        ),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('instruments', 'api_classname_obsplan')
    op.drop_index(
        op.f('ix_plannedobservations_dateobs'), table_name='plannedobservations'
    )
    op.drop_index(
        op.f('ix_plannedobservations_created_at'), table_name='plannedobservations'
    )
    op.drop_table('plannedobservations')
    op.drop_index(
        'observationplan_groups_reverse_ind', table_name='observationplan_groups'
    )
    op.drop_index(
        'observationplan_groups_forward_ind', table_name='observationplan_groups'
    )
    op.drop_index(
        op.f('ix_observationplan_groups_created_at'),
        table_name='observationplan_groups',
    )
    op.drop_table('observationplan_groups')
    op.drop_index(
        op.f('ix_eventobservationplans_status'), table_name='eventobservationplans'
    )
    op.drop_index(
        op.f('ix_eventobservationplans_dateobs'), table_name='eventobservationplans'
    )
    op.drop_index(
        op.f('ix_eventobservationplans_created_at'), table_name='eventobservationplans'
    )
    op.drop_table('eventobservationplans')
    op.drop_index(
        op.f('ix_observationplanrequests_status'), table_name='observationplanrequests'
    )
    op.drop_index(
        op.f('ix_observationplanrequests_requester_id'),
        table_name='observationplanrequests',
    )
    op.drop_index(
        op.f('ix_observationplanrequests_localization_id'),
        table_name='observationplanrequests',
    )
    op.drop_index(
        op.f('ix_observationplanrequests_gcnevent_id'),
        table_name='observationplanrequests',
    )
    op.drop_index(
        op.f('ix_observationplanrequests_created_at'),
        table_name='observationplanrequests',
    )
    op.drop_index(
        op.f('ix_observationplanrequests_allocation_id'),
        table_name='observationplanrequests',
    )
    op.drop_table('observationplanrequests')
    # ### end Alembic commands ###
