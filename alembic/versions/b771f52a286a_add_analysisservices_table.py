"""Add AnalysisServices table

Revision ID: b771f52a286a
Revises: a1868013bebb
Create Date: 2022-05-09 22:50:59.691634

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'b771f52a286a'
down_revision = 'a1868013bebb'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'analysis_services',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('display_name', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('version', sa.String(), nullable=True),
        sa.Column('contact_name', sa.String(), nullable=True),
        sa.Column(
            'contact_email',
            sqlalchemy_utils.types.email.EmailType(length=255),
            nullable=True,
        ),
        sa.Column('url', sqlalchemy_utils.types.url.URLType(), nullable=False),
        sa.Column(
            'authentication_type',
            sa.Enum(
                'none',
                'header_token',
                'api_key',
                'HTTPBasicAuth',
                'HTTPDigestAuth',
                'OAuth1',
                name='authenticationtypes',
            ),
            nullable=False,
        ),
        sa.Column(
            '_authinfo',
            sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(),
            nullable=True,
        ),
        sa.Column('enabled', sa.Boolean(), nullable=False),
        # add meta_anlysis_type, making use of more than one primary data sources
        sa.Column(
            'analysis_type',
            sa.Enum(
                'lightcurve_fitting',
                'spectrum_fitting',
                'meta_analysis',
                name='analysistypes',
            ),
            nullable=False,
        ),
        sa.Column(
            'input_data_types',
            postgresql.ARRAY(
                sa.Enum(
                    'photometry',
                    'spectra',
                    'redshift',
                    'annotations',
                    'comments',
                    name='analysisinputtypes',
                )
            ),
            nullable=True,
        ),
        sa.Column('timeout', sa.Float(), nullable=True),
        sa.Column('upload_only', sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_analysis_services_created_at'),
        'analysis_services',
        ['created_at'],
        unique=False,
    )
    op.create_index(
        op.f('ix_analysis_services_name'), 'analysis_services', ['name'], unique=True
    )
    op.create_table(
        'group_analysisservices',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('group_id', sa.Integer(), nullable=False),
        sa.Column('analysis_service_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['analysis_service_id'], ['analysis_services.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        'group_analysisservices_forward_ind',
        'group_analysisservices',
        ['group_id', 'analysis_service_id'],
        unique=True,
    )
    op.create_index(
        'group_analysisservices_reverse_ind',
        'group_analysisservices',
        ['analysis_service_id', 'group_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_group_analysisservices_created_at'),
        'group_analysisservices',
        ['created_at'],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f('ix_group_analysisservices_created_at'),
        table_name='group_analysisservices',
    )
    op.drop_index(
        'group_analysisservices_reverse_ind', table_name='group_analysisservices'
    )
    op.drop_index(
        'group_analysisservices_forward_ind', table_name='group_analysisservices'
    )
    op.drop_table('group_analysisservices')
    op.drop_index(op.f('ix_analysis_services_name'), table_name='analysis_services')
    op.drop_index(
        op.f('ix_analysis_services_created_at'), table_name='analysis_services'
    )
    op.drop_table('analysis_services')
    # ### end Alembic commands ###
